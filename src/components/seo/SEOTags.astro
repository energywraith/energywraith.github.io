---
import { SEO } from "astro-seo";
import { AstroFont } from "astro-font";
import { SITE_URL } from "@/data/config";
import type { HeadTags } from "@/utils/types/HeadTags";

type Props = HeadTags;

const { title, description, noindex, og } = Astro.props;

const DEFAULT_TITLE_PAGE = "Adam JaÅ‚ocha";
const DEFAULT_DESCRIPTION_PAGE =
  "Software Engineer, dreamer & pixel crafter. Built cool stuff for HSS and the European Space Agency. Co-creating vanture.club. Cat lover & photographer ðŸ“¸.";
const DEFAULT_URL_SITE = SITE_URL;

const openGraph = {
  title: title || og?.title || DEFAULT_TITLE_PAGE,
  type: og?.type || "website",
  image: og?.image || "/opengraph-image.jpg",
  alt: og?.alt || "Adam JaÅ‚ocha Image",
  url: DEFAULT_URL_SITE,
  description: og?.description || DEFAULT_DESCRIPTION_PAGE,
};
---

<head>
  <SEO
    charset="UTF-8"
    title={title || DEFAULT_TITLE_PAGE}
    description={description || DEFAULT_DESCRIPTION_PAGE}
    noindex={noindex || false}
    openGraph={{
      basic: {
        title: openGraph.title,
        type: openGraph.type,
        image: openGraph.image,
      },
      image: {
        alt: openGraph.alt,
      },
    }}
    extend={{
      link: [
        { rel: "icon", href: "/favicon.ico" },
        { rel: "sitemap", href: "/sitemap-index.xml" },
      ],
      meta: [
        { name: "viewport", content: "width=device-width, initial-scale=1" },
        { name: "generator", content: Astro.generator },
      ],
    }}
  />
  <AstroFont
    config={[
      {
        src: [],
        preload: false,
        display: "swap",
        selector: "html",
        name: "Rubik",
        fallback: "sans-serif",
        cssVariable: "font-rubik",
        googleFontsURL:
          "https://fonts.googleapis.com/css2?family=Rubik:wght@400;500;600;700;800;900&display=swap",
      },
      {
        src: [],
        preload: false,
        display: "swap",
        selector: "html",
        name: "Pattaya",
        fallback: "sans-serif",
        cssVariable: "font-pattaya",
        googleFontsURL:
          "https://fonts.googleapis.com/css2?family=Pattaya:wght@400&display=swap",
      },
    ]}
  />
  <script is:inline>
    const theme = (() => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }

      return "dark";
    })();

    if (theme === "light") {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
    }

    window.localStorage.setItem("theme", theme);
  </script>
  <script>
    import "@/scripts/menu.ts";
  </script>
</head>
